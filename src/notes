-------------------------------------------------------------------------------

- purify & test flexnet

- change ipfilter man page

- verify english bbs help file

- Beobachtung: Peer fehlt in der Dest Liste

- delete peer only after 2nd poll timeout

-------------------------------------------------------------------------------

dk5sg> flexnet dest
Call          Neighbors
DK0HU         DL1SBL-1 (2)
DB0SAO        DL1SBL-1 (3)
dk5sg> fl qu db0sao
Destination "db0sao" not found
dk5sg>

-------------------------------------------------------------------------------

flexnet dest
Call          Neighbors
DK0HU         DL1SBL-1 (2)
DB0SAO        DL1SBL-1 (3)
dk5sg> fl qu DB0SAO
Could not send query to DL1SBL-1
dk5sg> ax sta
   &AXCB Rcv-Q Unack  Rt  Srtt  State          Remote
40060fe0     0   0/7   0   183  Connected      DK5SG->DL1SBL-1
400719e8     0   0/1   0     0  Connected      DK5SG->DG1SEK-15
dk5sg>

-------------------------------------------------------------------------------

- TCP with closed windows: spinning

- muss die pty beim login erst geflushed werden?

- Der from teil  kann nur !  enthalten,  dann  steht  der s&f.  ==> wenn
  from == !  ist irgendein substitute einsetzen !!!

- manchmal wird eine ganze Serie I Frames wiederholt

- wir senden zuerst RR, dann REJ

- 'rs' does not work on hp-terminals

- even in raw mode it should be possible to send ^] without leaving the session
  --> check telnet

- check overflow in mail buffers

- "will echo" implementieren und testen (all telnet options)

- tty.h; ttydriv an session koppeln (Schwierigkeit: keine CmdSession)

- Mailer: Alle Message Delimiter entfernen

-------------------------------------------------------------------------------

- A block of size  MAX_N has no buddy, it can not be  combined  with any
  other block.

- A block of size < MAX_N will have a buddy.

- We keep a table of addresses of all blocks of size MAX_N.  This allows
  us to "normalize" the address of a block, and to calculate the address
  of its buddy. ===== BETTER SOLUTION REQUIRED =====

	pbuddy = (p - base) ^ size;

- For every  block with size less than MAX_N we can tell if the block is
  free or not.  A free  block does  contain a pointer  to an other  free
  block, or a NULL  pointer.  The pointer  will never  point to the free
  table.  A used block  does  contain a pointer  that will  point to the
  free table.  An alternative  would be to store n in used blocks.  n is
  a small integer in the range MIN_N..MAX_N  (typically 3..20), so n can
  easily be distinguished from a pointer.

- If we free a block,  and its buddy is free too, then those two  blocks
  will be  recombined.  To unlink the buddy  from the free list  without
  searching the free list has to be doubly linked.

- Therefore,  we need two  pointers in each free  block, and we need one
  pointer (or a size) in each allocated block.

-------------------------------------------------------------------------------

