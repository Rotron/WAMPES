.\" @(#) $Id: memory,v 1.9 1996-08-19 16:32:32 deyke Exp $
.H 2 "memory" " \fIsubcommand\fP"
These commands control memory allocation.
.H 3 "memory debug" " [on|off]"
Display or set the flag controlling
heap debugging. If heap debugging is turned on, all
memory blocks returned by malloc will be filled with the value 0xdd, and
all memory blocks freed will be filled with the value 0xbb. This makes
it easier to track uninitialized and freed memory reads.
The default is \fBoff\fP.
.H 3 "memory freelist"
Display the number of all currently free memory blocks. Different block
sizes (rounded up to the next power of two) are counted separately.
.H 3 "memory merge" " [on|off]"
Display or set the flag controlling
the attempt to merge adjacent free memory blocks into
bigger blocks.
The default is \fBon\fP.
.H 3 "memory sizes"
Display the total number (counted since program startup) of all memory
allocation requests. Requests for different block sizes (rounded up to
the next power of two) are counted separately.
.H 3 "memory status"
Display a summary of storage allocator statistics:
.BL
.LI
The first line
shows the total size of the heap, the amount of heap
memory available in bytes and as a percentage of the total heap size,
and the number of sbrk system calls used to increase the heap size.
.LI
The second line shows the total number of calls to allocate and free blocks
of memory, the difference of these two values (i.e., the number of allocated
blocks outstanding), the number of allocation requests that were denied
due to lack of memory, and the number of calls to free that attempted to
free garbage
(eg. by freeing the same block twice or freeing a garbled pointer).
.LI
The third line shows the total number of splits
(breaking a big heap block into two small blocks)
and merges
(combining two adjacent small blocks into one big block),
and the difference of these two values.
.LI
The fourth line shows the number of calls to pushdown,
and the number of calls to pushdown which resulted in a call to malloc.
.LE
